class Test.Testing (Efl.Object) {
   methods {
      return_object {
         return: Test.Testing;
      }

      in_stringshare {
         params {
            @in v: stringshare;
         }
         return: own(stringshare);
      }
      in_own_stringshare {
         params {
            @in v: own(stringshare);
         }
         return: own(stringshare);
      }

      out_stringshare {
         params {
            @out v: stringshare;
         }
      }
      out_own_stringshare {
         params {
            @out v: own(stringshare);
         }
      }

      return_stringshare {
         return: stringshare;
      }
      return_own_stringshare {
         return: own(stringshare);
      }

      in_string {
         params {
            @in str: own(string);
         }
         return: own(string);
      }

      in_own_string {
         params {
            @in str: string;
         }
         return: string;
      }

      return_string {
         return: string;
      }

      return_own_string {
         return: own(string);
      }

      out_string {
         params {
            @out str: string;
         }
      }

      out_own_string {
         params {
            @out str: own(string);
         }
      }

      call_in_string {
        params {
            @in str: string;
        }
        return: string;
      }

      call_in_own_string {
        params {
            @in str: string;
        }
        return: own(string);
      }

      call_return_string {
         return: string;
      }

      call_return_own_string {
         return: own(string);
      }

      call_out_string {
         return: string;
      }

      call_out_own_string {
         return: own(string);
      }

      // Stringshare virtual helpers
      call_in_stringshare {
        params {
            @in str: stringshare;
        }
        return: stringshare;
      }

      call_in_own_stringshare {
        params {
            @in str: stringshare;
        }
        return: own(stringshare);
      }

      call_return_stringshare {
         return: stringshare;
      }

      call_return_own_stringshare {
         return: own(stringshare);
      }

      call_out_stringshare {
         return: stringshare;
      }

      call_out_own_stringshare {
         return: own(stringshare);
      }
   }
}
