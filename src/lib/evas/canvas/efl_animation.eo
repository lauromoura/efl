import efl_animation_types;

class Efl.Animation (Efl.Object)
{
   [[Efl animation class]]
   data: Efl_Animation_Data;
   methods {
      @property target {
         set {
         }
         get {
         }
         values {
            target: Efl.Canvas.Object; [[Target object which is applied animation.]]
         }
      }
      @property final_state_keep {
         set {
         }
         get {
         }
         values {
            keep_final_state: bool; [[$true to keep final state, $false otherwise.]]
         }
      }
      @property duration {
         set {
         }
         get {
         }
         values {
            duration: double; [[Duration value.]]
         }
      }
      duration_only_set @protected {
         [[Set duration only without setting total duration.]]
         params {
            @in duration: double; [[Duration value.]]
         }
      }
      @property total_duration {
         set @protected {
         }
         get {
         }
         values {
            total_duration: double; [[Total duration value.]]
         }
      }
      @property repeat_count {
         set {
         }
         get {
         }
         values {
            count: int; [[Repeat count. EFL_ANIMATION_REPEAT_INFINITE repeats animation infinitely.]]
         }
      }
      is_deleted @protected {
         return: bool; [[$true if animation is deleted, $false otherwise.]]
      }
      object_create {
         [[Create object of the animation.]]
         return: Efl.Animation.Object; [[Created object of the animation]]
      }
   }
   implements {
      Efl.Object.constructor;
      Efl.Object.destructor;
   }
}
